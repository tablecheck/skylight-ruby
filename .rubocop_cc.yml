inherit_from: .rubocop_todo.yml

AllCops:
  TargetRubyVersion: 2.5
  NewCops: enable
  Exclude:
    - '**/vendor/**/*'

Bundler/DuplicatedGem:
  Exclude:
    - 'spec/dummy/Gemfile'

Layout/HashAlignment:
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table

# Allows for easier copy-pasting into shell and comments between lines
Layout/DotPosition:
  EnforcedStyle: trailing

Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods
  # For these files, the check fails on CI yet passes locally
  Exclude:
    - lib/skylight/probes/action_controller.rb
    - spec/integration/rails_spec.rb

Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

# Longer lines can be ok at times
Layout/LineLength:
  Max: 120

# This is behaving strangely where, when we try to disable it one-off, the Lint/RedundantCopDisableDirective
# says it was unnecessary to disable it.
Lint/EmptyBlock:
  Enabled: false

# We shouldn't worry about this in specs
Lint/SuppressedException:
  Exclude:
    - '**/*_spec.rb'

# We do a lot of handling of all error classes. This seems probably ok for our case.
Lint/RescueException:
  Enabled: false

Lint/UnusedMethodArgument:
  AllowUnusedKeywordArguments: true

# Doesn't make sense to have to split up module and context blocks
Metrics/BlockLength:
  Exclude:
    - '**/*_spec.rb'

# In some cases `get_*` or `set_*` seems more appropriate than without.
Naming/AccessorMethodName:
  Enabled: false

Naming/PredicateName:
  AllowedMethods:
    - is_a?       # Default
    - has_errors? # Seems clearer than suggested `errors?`

# This is a bit too strict for us
Style/ClassAndModuleChildren:
  Enabled: false

# It's nice to actually have boolean values
Style/DoubleNegation:
  Enabled: false

# We don't necessarily need to document every module, but maybe we can remove this later.
Style/Documentation:
  Enabled: false

Style/GlobalVars:
  Exclude:
    - 'ext/extconf.rb'

# Not convinced this makes things better
Style/GuardClause:
  Enabled: false

# While long lines can be ok, having the condition after a long line isn't great
Style/IfUnlessModifier:
  Enabled: false

Style/MixinUsage:
  Exclude:
    - 'ext/extconf.rb'

# We use timestamps in some tests and this doesn't play nice
Style/NumericLiterals:
  Enabled: false

Style/NumericPredicate:
  Enabled: false

# Maybe we can revisit this later
Style/PerlBackrefs:
  Enabled: false

# This isn't super helpful and has issues with multi-argument split
Style/RedundantArgument:
  Enabled: false

# Overly verbose to have to declare rescue class
Style/RescueStandardError:
  EnforcedStyle: implicit

# This may not be a great idea but we do it frequently. We should revisit.
Style/RescueModifier:
  Enabled: false

# No performance penalty for double quotes and easier to be consistent
Style/StringLiterals:
  EnforcedStyle: double_quotes

# We don't want to use warn because we want to treat these like errors.
Style/StderrPuts:
  Enabled: false

# Peter and Zach don't like one line whiles
Style/WhileUntilModifier:
  Enabled: false
